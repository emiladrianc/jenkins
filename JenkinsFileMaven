node {

	try{

		stage ('Check Out'){
			checkout scm
		}
		
		stage ('Build'){
			withMaven(maven: 'M3', mavenLocalRepo: '.repository') {
				sh 'mvn clean compile'
			}
			
		}

		stage ('Run tests'){
			withMaven(maven: 'M3', mavenLocalRepo: '.repository') {
				sh 'mvn test'
			}
		}

		stage ('Code coverage'){
			withMaven(maven: 'M3', mavenLocalRepo: '.repository') {
				sh 'mvn cobertura:cobertura'
				publishHTML(target:[
					allowMissing: false, 
					alwaysLinkToLastBuild: true, 
					keepAll: false, 
					reportDir: 'target/site/cobertura/', 
					reportFiles: 'index.html', 
					reportName: 'UnitTests Report'])
			}
		}		
				
		stage('SonarQube analysis') {
			withSonarQubeEnv('SonarQube Server') {            
				withMaven(maven: 'M3', mavenLocalRepo: '.repository') {				
					sh 'mvn sonar:sonar'
				}
			}
    	}
		
		stage('Change version'){
			withMaven(maven: 'M3', mavenLocalRepo: '.repository') {
				sh 'mvn versions:set'
				sh 'mvn versions:commit'
			}
		}
		
		stage('Deploy artifact to nexus'){
			withMaven(maven: 'M3', mavenLocalRepo: '.repository') {
				sh 'mvn clean deploy'
			}
		}		
		
		notify('Success')
	}
	catch(err){
		notify("Error ${err}")
		currentBuild.result = 'FAILURE'
	}
}

def notify(status){
    emailext (
      to: "emil.cristurean@accenture.com",
      subject: "${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
      body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
        <p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
    )
}