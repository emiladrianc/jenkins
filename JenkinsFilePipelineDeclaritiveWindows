pipeline {
    agent any

	options { 
		buildDiscarder(logRotator(numToKeepStr: '5'))
		timeout(time: 10, unit: 'MINUTES')
		timestamps()
		disableConcurrentBuilds()
	}

	triggers {
		pollSCM('* * * * *')
	}
			
    stages {
		stage ('Check Out'){
			steps {
				checkout scm
			}
		}
		
		stage ('Build'){
			steps {
				bat 'mvn clean compile'
			}
		}

		stage ('Run tests'){
			steps {
				bat 'mvn test'
			}
		}

		stage ('Code coverage'){
			steps {
				bat 'mvn cobertura:cobertura'
				publishHTML(target:[
					allowMissing: false, 
					alwaysLinkToLastBuild: true, 
					keepAll: false, 
					reportDir: 'target/site/cobertura/', 
					reportFiles: 'index.html', 
					reportName: 'UnitTests Report'])
			}
		}		
		
		
		stage('SonarQube analysis') {
			steps {
				withSonarQubeEnv('SonarQube Server') {            
					bat 'mvn sonar:sonar'
				}
			}
    	}
		
		stage('Change version'){
			steps {
				bat 'mvn versions:set'
				bat 'mvn versions:commit'
			}
		}
		
		stage('Deploy artifact to nexus'){
			steps {			
				bat 'mvn clean deploy'
			}
		}		
    }
	
	post {
		always {
             echo 'Always....'
		}
		
		success{
			echo 'Success....'
		}		
	}
}